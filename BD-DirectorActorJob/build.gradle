/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala library project to get you started.
 * For more details take a look at the Scala plugin chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.2.1/userguide/scala_plugin.html
 */

plugins {
    id 'java'
    id 'scala'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'application'
}

group 'it.unibo.bd'
version '2.1.2'

sourceCompatibility = 1.7
targetCompatibility = 1.7



/*configurations {
    provided
}*/

mainClassName = 'it.unibo.bd1819.mocktest.SparkMockMain'

// this makes the scala classes builds alongside the java ones.
sourceSets {
    main {
        scala {
            srcDirs = ['src/main/scala', 'src/main/java']
        }
        java {
            srcDirs = []
        }
    }
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"

    }
    // Cloudera Release Repo needed for those specific hadoop libraries versions
    // (probably not needed if using other versions)
    maven {
        url "https://repository.cloudera.com/content/repositories/releases/"
    }

    // Cloudera Third-Party Repo needed for Cloudera-specific dependencies
    // (probably not needed if using other versions)
    maven {
        url "https://repository.cloudera.com/content/repositories/third-party/"
    }
}

dependencies {
    implementation "org.scala-lang:scala-library:"+scalaVersion
    implementation "org.scala-lang:scala-reflect:"+scalaVersion
    implementation "org.scala-lang:scala-compiler:"+scalaVersion

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.scalatest:scalatest_2.11:3.0.7'

    testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.11:1.2.0'

   // implementation 'org.apache.spark:spark-mllib_2.11:2.1.0'
    implementation 'org.apache.spark:spark-sql_2.11:2.1.0'
    implementation 'org.apache.spark:spark-streaming-flume-assembly_2.11:2.1.0'
    //implementation 'org.apache.spark:spark-graphx_2.11:2.1.0'
    //implementation 'org.apache.spark:spark-launcher_2.11:2.1.0'
    implementation 'org.apache.spark:spark-catalyst_2.11:2.1.0'
    implementation 'org.apache.spark:spark-streaming_2.11:2.1.0'
    implementation 'org.apache.spark:spark-core_2.11:2.1.0'

    // Using 2.6.0-cdh5.13.1 Cloudera-specific versions
    // because those are the ones used on the server provided by University

    // https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-common
    implementation("org.apache.hadoop:hadoop-common:2.6.0-cdh5.13.1")

    // https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-core
    implementation("org.apache.hadoop:hadoop-core:2.6.0-mr1-cdh5.13.1")

    // https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-hdfs
    implementation("org.apache.hadoop:hadoop-hdfs:2.6.0-cdh5.13.1")

    implementation 'commons-io:commons-io:2.5'

    // Add cli parser support.
    compile group: 'org.rogach', name: 'scallop_2.11', version: '3.1.3'
}


shadowJar {
    zip64 true
}

// Shadowing Test Sources and Dependencies
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

task mapReduceJar(type: ShadowJar) {
    classifier = 'mr'
    manifest.attributes 'Main-Class': 'it.unibo.bd1819.Main'
    from(shadowJar.from())
    zip64 true
}

task sparkJar(type: ShadowJar) {
    classifier = 'spark'
    manifest.attributes 'Main-Class': 'it.unibo.bd1819.ScalaMain'
    from(shadowJar.from())
    zip64 true
}


defaultTasks 'clean', 'build', 'javadoc', 'scaladoc', 'shadowJar'



